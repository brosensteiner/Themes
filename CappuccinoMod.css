/*
	@theme CappuccinoMod
	@override-placeholders ruby, css, html, bash
  	@author Bernhard Rosensteiner
*/

:document-base {
	color: hsl(0, 0%, 75%);
	background-color: hsla(0, 0%, 0%, 0.92);
	insertion-point-color: #fff;
	selection-background-color: hsl(220, 4%, 50%);
	current-line-background-color: hsl(0, 0%, 15%);
}

shebang {
	color: hsl(0, 84%, 51%);
	font-weight: bold;
}

numeric {
        color: #7653c1;
}

punctuation.terminator {
	color: hsl(0, 0%, 50%);
	font-weight: bold;
}

keyword.control {
	color: hsl(31, 84%, 49%);
	font-weight: bold;
}
keyword.unit {
	color: hsl(330, 64%, 51%);
	font-weight: bold;
}
keyword.other {
	color: hsl(238, 77%, 64%);
	font-weight: bold;
}
keyword.important,
keyword {
	color: #d33682;
}

operator.unary,
operator.binary,
operator.assignment,
operator.comparison,
operator.logical {
	color: hsl(330, 64%, 51%);
	font-weight: bold;
}
operator {
	color: hsl(330, 64%, 51%);
}

storage.type,
global {
	color: #268bd2;
}
delimiter.bracket,
open-bracket,
close-bracket {
	color: hsl(16, 90%, 52%);
	font-weight: bold;
}
open-brace, close-brace,
open-parenthesis, close-parenthesis {
	color: hsl(0, 0%, 100%);
	font-weight: bold;
}

namespace,
tag > attribute-with-value > string.quoted {
	color: hsl(0, 95%, 66%);
}

processing-instruction {
	color: hsl(0, 0%, 68%);
}

class > name {
	color: hsl(37, 88%, 78%);
	font-weight: bold;
	font-style: italic;
}
tag>name,
identifier.function,
support.function,
function-call {
	color: hsla(42, 91%, 72%, 0.8);
}
function > name,
css.embedded attribute-name,
css.embedded punctuation.definition.tag {
	color: #F9EA99;
	font-weight: bold;
}

variable {
	color: hsl(96, 30%, 50%);
}

characters,
tag,
attribute-name,
punctuation.definition.tag {
	color: #f4daa9;
}

property-name {
	color: hsl(200, 95%, 60%);
}

property-value, vvariable {
	color: hsl(96, 19%, 56%);
}

escape,
escapes,
escaped {
	color: hsl(39, 100%, 30%);
	font-weight: bold;
}

comment,
tag.doctype,
tag.doctype > *,
tag.doctype > string.quoted {
	color: hsl(0, 2%, 40%);
}

balanced,
punctuation.section,
string.quoted > punctuation {
	color: hsl(0, 0%, 100%);
}

string.quoted-alt {
	bluebackground-color: #f4f9fe;
	color: hsl(179, 72%, 36%);
	background-color: rgba(235,252,254,0.5);
}
string.quoted {
	color: hsl(33, 42%, 25%);
}
selector {
	color: rgb(127, 89, 48);
}
string.quoted > escape {
	font-weight: bold;
	color: hsl(31, 45%, 34%);
	background-color: rgba(251, 233, 173, 0.08);
}

js.embedded {
	color: hsl(0, 0%, 26%);
}

constant.numeric, constant.language {
	color: hsl(0, 0%, 100%);
	background-color: #555;
}

invalid {
	background-color: hsl(0, 94%, 58%);
	color: hsl(50, 78%, 89%);
}

textile > header,
tag.h1,
tag.h1 *,
tag > string > punctuation {
	font-weight: bold;
}

/* @group regex */

regex quantifier,
regex negated,
regex identifier.any {
	color: hsl(330, 64%, 51%);
	font-weight: bold;
}
regex container begin,
regex container end {
	color: hsl(0, 95%, 66%);
}
regex operator {
	color: hsl(0, 0%, 100%);
	font-weight: bold;
}

regex character-class {
	color: hsl(84, 64%, 30%);
}

/* @end */

/* @group Lua */

lua.operator.lenght {
	color: hsl(330, 64%, 51%);
	font-weight: bold;
}
lua.function-call.table-key,
lua.punctuation.table-call {
	color: hsl(0, 0%, 49%);
	font-weight: bold;
}

lua.keyword.character-class {
 		color: hsl(355, 61%, 55%);
}
lua.table.separator {
	color: hsl(39, 30%, 38%);
}
lua.metamethod {
	color: hsl(355, 61%, 55%);
}
lua.container > delimiter.comma,
lua.function-argument > delimiter.comma {
	color: hsl(0, 94%, 58%);
}

/* @end */

/* @group Tcl */
tcl.dollar,
tcl.container.evaluate-array > evaluate,
tcl.variable.punctuation {
	color: hsl(96, 80%, 80%);
}

tcl.argument-expansion,
tcl.control + s + tcl-unary,
tcl.control + s + container > tcl-unary,
tcl.function-call[text='expr'] + s + tcl-unary,
tcl.function-call[text='expr'] + s + container tcl-unary,
tcl.definition + tcl-operator,
tcl.definition + s + tcl-operator,
tcl.numeric + s + tcl-operator,
tcl.numeric + tcl-operator,
tcl.container + tcl-operator,
tcl.container + s + tcl-operator {
	color: hsl(330, 64%, 51%);
	font-weight: bold;
}
tcl.unset-var {
	color: hsl(0, 79%, 50%);
	font-style: italic;
}
tcl.format-specifier {
	color: hsl(204, 69%, 48%);
}
tcl.format-type {
	font-weight:bold;
}

tcl.namespace {
	color: hsl(0, 0%, 100%);
	font-weight: bold;
}

/* @end */

/* @group ConTeXt */
context.unprotect,
context.support.function.general.counting + support.function.general + keyword-zone.by-keyword,
context.support.function.general.rule + keyword-zone.depth-width-height-keyword,
context.support.function.general.rule + keyword-zone.depth-width-height-keyword + keyword-zone.unit + keyword-zone.depth-width-height-keyword,
context.support.function.general.rule + keyword-zone.depth-width-height-keyword + keyword-zone.unit + keyword-zone.depth-width-height-keyword + keyword-zone.unit + keyword-zone.depth-width-height-keyword,
context.keyword-zone + plus-minus-keyword,
context.support.function.general.box + keyword-zone.to-spread-keyword > to-spread-keyword {
	color: hsl(84, 64%, 56%);
}

context.between.brackets > key-name {
	color: hsl(200, 95%, 52%);
}

context.section,
context.function.place-complete,
context.table.cell,
context.table.row {
	font-weight: bold;
	background-color: hsl(0, 0%, 50%);
}
context.begin.math,
context.end.math {
	color: hsl(299, 100%, 25%);
	font-weight: bold;
}

context.between.brackets > delimiter.comma,
context.support.function + brace > delimiter.comma,
context.support.function + brace + brace > delimiter.comma,
context.support.function + brace + brace + brace > delimiter.comma,
context.key-name[text='location'] + assignment + brace > delimiter.comma,
context.key-name[text='align'] + assignment + brace > delimiter.comma,
context.key-name[text='background'] + assignment + brace > delimiter.comma,

context.balanced.bracket:has-child(function[text='\\definecolorgroup']) + bracket colon {
	color: hsl(330, 64%, 51%);
	font-weight: bold;
}

/* @end */
